[제스처 데이터 수집 코드 작성]
gather_dataset.py -> data/gesture_train.csv
데이터를 더 추가하여 정확도를 높일 계획.

[제스처 인식 코드 작성]
main.py
테스트 및 제스처 인식 결과 서버에 전송 이전 단계까지 구현

[소켓 통신 코드 작성]
server.py와 client.py로 서버 & 클라이언트 파이썬으로 구현

[가상의 키오스크 화면을 웹에 띄우기]
kiosk/image 폴더에서 이미지들을 불러와 kiosk/screen.html에 띄움.


** 추후 계획 **
1. 제스처 데이터 수집(11/16)
    | 코드 작성은 완료하였으므로, 해당 코드를 실행하여 데이터를 수집한다. (직접)

2. 키오스크 화면 수정(추후)
    | 피드백을 반영하여 좌우로 넘기는 부분 UI 재설계, 수정한 제스처에 맞게 이미지 삽입, 타이틀 배너 제작

3. 제스처 인식 테스트(11/17)
    | 제스처들을 올바르게 인식하는지 테스트한다.

4. 실험 코드 작성(11/18)
    | 예상 결과값과 실제 결과값을 비교하여 인식률을 계산(실험)하는 코드를 작성한다.

5. 실험(11/21~11/23)
    1) 키오스크에 부착될 카메라의 위치에 따른 인식률을 실험한다.
        | 일정한 거리(30~50cm) 내에서 카메라가 키오스크 모니터의 위쪽, 왼쪽, 오른쪽, 아래쪽에 부착되었다고 가정하여 각각에서 인식률을 측정한다.
    2) 키오스크와 사용자의 거리에 따른 인식률을 실험한다.
        | 매우 가까운 거리(0~15cm), 가까운 거리(15~30cm), 일반적인 거리(30~50cm), 조금 먼 거리(50~70cm), 먼 거리(70~100cm) 5단계로 나누어 각각 인식률을 측정한다.
    3) 오른손과 왼손의 인식률에 차이는 없는지 실험한다.
        | 1번과 2번 실험을 참고하여 가장 최적화된 조건 하에서 각 손마다 인식률을 측정하여 비교한다.

6. 소켓 통신 연결(11/23~11/29)
    | main.py에서 나온 결과값을 server에 전송하고, server는 이에 따른 홈페이지(키오스크 모니터)를 띄우는 코드를 작성한다.

7. 데모영상 제작(11/30)

8. 논문 작성(12/1~12/4)

9. 발표자료 제작(12/4~12/7)

